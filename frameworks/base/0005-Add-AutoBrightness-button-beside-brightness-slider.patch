From 8dd06602d5509fc4b235ee815ed6277a3ca290c1 Mon Sep 17 00:00:00 2001
From: SagarMakhar <sagarmakhar@gmail.com>
Date: Sun, 24 Oct 2021 17:39:47 +0000
Subject: [PATCH] Add AutoBrightness button beside brightness slider

---
 .../res/drawable/ic_qs_brightness_auto.xml    |  35 +++++
 .../drawable/ic_qs_brightness_auto_off.xml    |  55 +++++++
 .../ic_qs_brightness_auto_off_avd.xml         |  74 ++++++++++
 .../res/drawable/ic_qs_brightness_auto_on.xml |  56 ++++++++
 .../drawable/ic_qs_brightness_auto_on_avd.xml |  74 ++++++++++
 .../layout/quick_settings_auto_brightness.xml |  26 ++++
 .../quick_settings_brightness_dialog.xml      |   4 +-
 .../brightness/BrightnessController.java      |  15 ++
 .../BrightnessSliderController.java           |  35 ++++-
 .../brightness/BrightnessSliderView.java      |  66 ++++++++-
 .../settings/brightness/ToggleIconView.kt     | 136 ++++++++++++++++++
 .../settings/brightness/ToggleSlider.java     |   3 +
 12 files changed, 575 insertions(+), 4 deletions(-)
 create mode 100644 packages/SystemUI/res/drawable/ic_qs_brightness_auto.xml
 create mode 100644 packages/SystemUI/res/drawable/ic_qs_brightness_auto_off.xml
 create mode 100644 packages/SystemUI/res/drawable/ic_qs_brightness_auto_off_avd.xml
 create mode 100644 packages/SystemUI/res/drawable/ic_qs_brightness_auto_on.xml
 create mode 100644 packages/SystemUI/res/drawable/ic_qs_brightness_auto_on_avd.xml
 create mode 100644 packages/SystemUI/res/layout/quick_settings_auto_brightness.xml
 create mode 100644 packages/SystemUI/src/com/android/systemui/settings/brightness/ToggleIconView.kt

diff --git a/packages/SystemUI/res/drawable/ic_qs_brightness_auto.xml b/packages/SystemUI/res/drawable/ic_qs_brightness_auto.xml
new file mode 100644
index 000000000000..1d7f1cdd328c
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_qs_brightness_auto.xml
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2022 Paranoid Android
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<animated-selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item
+        android:id="@+id/checked"
+        android:drawable="@drawable/ic_qs_brightness_auto_on"
+        android:state_checked="true" />
+
+    <item
+        android:id="@+id/unchecked"
+        android:drawable="@drawable/ic_qs_brightness_auto_off" />
+
+    <transition
+        android:drawable="@drawable/ic_qs_brightness_auto_on_avd"
+        android:fromId="@id/unchecked"
+        android:toId="@id/checked" />
+
+    <transition
+        android:drawable="@drawable/ic_qs_brightness_auto_off_avd"
+        android:fromId="@id/checked"
+        android:toId="@id/unchecked" />
+</animated-selector>
diff --git a/packages/SystemUI/res/drawable/ic_qs_brightness_auto_off.xml b/packages/SystemUI/res/drawable/ic_qs_brightness_auto_off.xml
new file mode 100644
index 000000000000..7ba6ddf5da33
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_qs_brightness_auto_off.xml
@@ -0,0 +1,55 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2022 Paranoid Android
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<vector
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="@dimen/qs_icon_size"
+    android:height="@dimen/qs_icon_size"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path
+        android:name="sun"
+        android:pathData="M 20 8.69 L 20 4 L 15.31 4 L 12 0.69 L 8.69 4 L 4 4 L 4 8.69 L 0.69 12 L 4 15.31 L 4 20 L 8.69 20 L 12 23.31 L 15.31 20 L 20 20 L 20 15.31 L 23.31 12 L 20 8.69 Z M 18 14.48 L 18 18 L 14.48 18 L 12 20.48 L 9.52 18 L 6 18 L 6 14.48 L 3.52 12 L 6 9.52 L 6 6 L 9.52 6 L 12 3.52 L 14.48 6 L 18 6 L 18 9.52 L 20.48 12 L 18 14.48 Z"
+        android:fillColor="#ffffff" />
+    <group android:name="mask_group">
+        <clip-path
+            android:name="mask"
+            android:pathData="M 18 14.48 L 18 18 L 14.48 18 L 12 20.48 L 9.52 18 L 6 18 L 6 14.48 L 3.52 12 L 6 9.52 L 6 6 L 9.52 6 L 12 3.52 L 14.48 6 L 18 6 L 18 9.52 L 20.48 12 L 18 14.48 Z"/>
+        <group
+            android:name="auto_transform"
+            android:pivotX="12"
+            android:pivotY="12"
+            android:translateX="-24"
+            android:scaleX="0.5"
+            android:scaleY="0.5">
+            <path
+                android:name="auto"
+                android:pathData="M 11 7 L 7.8 16 L 9.7 16 L 10.4 14 L 13.6 14 L 14.3 16 L 16.2 16 L 13 7 L 11 7 Z M 12 9 L 13.15 12.65 L 10.85 12.65 L 12 9 Z"
+                android:fillColor="#ffffff" />
+        </group>
+        <group
+            android:name="manual_transform"
+            android:pivotX="12"
+            android:pivotY="12"
+            android:translateX="0"
+            android:scaleX="1"
+            android:scaleY="1">
+            <path
+                android:name="manual"
+                android:pathData="M 11.994 13.159 L 10.159 7.007 L 7.929 7.007 L 7.929 16 L 9.678 16 L 9.678 12.936 L 9.56 9.809 L 11.314 16 L 12.667 16 L 14.427 9.809 L 14.31 12.936 L 14.31 16 L 16.052 16 L 16.052 7.007 L 13.822 7.007 L 11.994 13.159 Z"
+                android:fillColor="#ffffff" />
+        </group>
+    </group>
+</vector>
diff --git a/packages/SystemUI/res/drawable/ic_qs_brightness_auto_off_avd.xml b/packages/SystemUI/res/drawable/ic_qs_brightness_auto_off_avd.xml
new file mode 100644
index 000000000000..7b4ee87e8dfa
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_qs_brightness_auto_off_avd.xml
@@ -0,0 +1,74 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2022 Paranoid Android
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<animated-vector
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt"
+    android:drawable="@drawable/ic_qs_brightness_auto_off">
+    <target android:name="auto_transform">
+        <aapt:attr name="android:animation">
+            <set>
+                <objectAnimator
+                    android:propertyName="translateX"
+                    android:duration="300"
+                    android:valueFrom="0"
+                    android:valueTo="24"
+                    android:valueType="floatType"
+                    android:interpolator="@android:interpolator/fast_out_slow_in" />
+                <objectAnimator
+                    android:propertyName="scaleX"
+                    android:duration="300"
+                    android:valueFrom="1"
+                    android:valueTo="0.5"
+                    android:valueType="floatType"
+                    android:interpolator="@android:interpolator/fast_out_slow_in" />
+                <objectAnimator
+                    android:propertyName="scaleY"
+                    android:duration="300"
+                    android:valueFrom="1"
+                    android:valueTo="0.5"
+                    android:valueType="floatType"
+                    android:interpolator="@android:interpolator/fast_out_slow_in" />
+            </set>
+        </aapt:attr>
+    </target>
+    <target android:name="manual_transform">
+        <aapt:attr name="android:animation">
+            <set>
+                <objectAnimator
+                    android:propertyName="translateX"
+                    android:duration="300"
+                    android:valueFrom="-24"
+                    android:valueTo="0"
+                    android:valueType="floatType"
+                    android:interpolator="@android:interpolator/fast_out_slow_in" />
+                <objectAnimator
+                    android:propertyName="scaleX"
+                    android:duration="300"
+                    android:valueFrom="0.5"
+                    android:valueTo="1"
+                    android:valueType="floatType"
+                    android:interpolator="@android:interpolator/fast_out_slow_in" />
+                <objectAnimator
+                    android:propertyName="scaleY"
+                    android:duration="300"
+                    android:valueFrom="0.5"
+                    android:valueTo="1"
+                    android:valueType="floatType"
+                    android:interpolator="@android:interpolator/fast_out_slow_in" />
+            </set>
+        </aapt:attr>
+    </target>
+</animated-vector>
diff --git a/packages/SystemUI/res/drawable/ic_qs_brightness_auto_on.xml b/packages/SystemUI/res/drawable/ic_qs_brightness_auto_on.xml
new file mode 100644
index 000000000000..b746b0aef3ae
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_qs_brightness_auto_on.xml
@@ -0,0 +1,56 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2022 Paranoid Android
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<vector
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:androidprv="http://schemas.android.com/apk/prv/res/android"
+    android:width="@dimen/qs_icon_size"
+    android:height="@dimen/qs_icon_size"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path
+        android:name="sun"
+        android:pathData="M 20 8.69 L 20 4 L 15.31 4 L 12 0.69 L 8.69 4 L 4 4 L 4 8.69 L 0.69 12 L 4 15.31 L 4 20 L 8.69 20 L 12 23.31 L 15.31 20 L 20 20 L 20 15.31 L 23.31 12 L 20 8.69 Z M 18 14.48 L 18 18 L 14.48 18 L 12 20.48 L 9.52 18 L 6 18 L 6 14.48 L 3.52 12 L 6 9.52 L 6 6 L 9.52 6 L 12 3.52 L 14.48 6 L 18 6 L 18 9.52 L 20.48 12 L 18 14.48 Z"
+        android:fillColor="#ffffff" />
+    <group android:name="mask_group">
+        <clip-path
+            android:name="mask"
+            android:pathData="M 18 14.48 L 18 18 L 14.48 18 L 12 20.48 L 9.52 18 L 6 18 L 6 14.48 L 3.52 12 L 6 9.52 L 6 6 L 9.52 6 L 12 3.52 L 14.48 6 L 18 6 L 18 9.52 L 20.48 12 L 18 14.48 Z"/>
+        <group
+            android:name="auto_transform"
+            android:pivotX="12"
+            android:pivotY="12"
+            android:translateX="0"
+            android:scaleX="1"
+            android:scaleY="1">
+            <path
+                android:name="auto"
+                android:pathData="M 11 7 L 7.8 16 L 9.7 16 L 10.4 14 L 13.6 14 L 14.3 16 L 16.2 16 L 13 7 L 11 7 Z M 12 9 L 13.15 12.65 L 10.85 12.65 L 12 9 Z"
+                android:fillColor="#ffffff" />
+        </group>
+        <group
+            android:name="manual_transform"
+            android:pivotX="12"
+            android:pivotY="12"
+            android:translateX="-24"
+            android:scaleX="0.5"
+            android:scaleY="0.5">
+            <path
+                android:name="manual"
+                android:pathData="M 11.994 13.159 L 10.159 7.007 L 7.929 7.007 L 7.929 16 L 9.678 16 L 9.678 12.936 L 9.56 9.809 L 11.314 16 L 12.667 16 L 14.427 9.809 L 14.31 12.936 L 14.31 16 L 16.052 16 L 16.052 7.007 L 13.822 7.007 L 11.994 13.159 Z"
+                android:fillColor="#ffffff" />
+        </group>
+    </group>
+</vector>
diff --git a/packages/SystemUI/res/drawable/ic_qs_brightness_auto_on_avd.xml b/packages/SystemUI/res/drawable/ic_qs_brightness_auto_on_avd.xml
new file mode 100644
index 000000000000..82a632d7fa46
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_qs_brightness_auto_on_avd.xml
@@ -0,0 +1,74 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2022 Paranoid Android
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<animated-vector
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt"
+    android:drawable="@drawable/ic_qs_brightness_auto_on">
+    <target android:name="auto_transform">
+        <aapt:attr name="android:animation">
+            <set>
+                <objectAnimator
+                    android:propertyName="translateX"
+                    android:duration="300"
+                    android:valueFrom="-24"
+                    android:valueTo="0"
+                    android:valueType="floatType"
+                    android:interpolator="@android:interpolator/fast_out_slow_in" />
+                <objectAnimator
+                    android:propertyName="scaleX"
+                    android:duration="300"
+                    android:valueFrom="0.5"
+                    android:valueTo="1"
+                    android:valueType="floatType"
+                    android:interpolator="@android:interpolator/fast_out_slow_in" />
+                <objectAnimator
+                    android:propertyName="scaleY"
+                    android:duration="300"
+                    android:valueFrom="0.5"
+                    android:valueTo="1"
+                    android:valueType="floatType"
+                    android:interpolator="@android:interpolator/fast_out_slow_in" />
+            </set>
+        </aapt:attr>
+    </target>
+    <target android:name="manual_transform">
+        <aapt:attr name="android:animation">
+            <set>
+                <objectAnimator
+                    android:propertyName="translateX"
+                    android:duration="300"
+                    android:valueFrom="0"
+                    android:valueTo="24"
+                    android:valueType="floatType"
+                    android:interpolator="@android:interpolator/fast_out_slow_in" />
+                <objectAnimator
+                    android:propertyName="scaleX"
+                    android:duration="300"
+                    android:valueFrom="1"
+                    android:valueTo="0.5"
+                    android:valueType="floatType"
+                    android:interpolator="@android:interpolator/fast_out_slow_in" />
+                <objectAnimator
+                    android:propertyName="scaleY"
+                    android:duration="300"
+                    android:valueFrom="1"
+                    android:valueTo="0.5"
+                    android:valueType="floatType"
+                    android:interpolator="@android:interpolator/fast_out_slow_in" />
+            </set>
+        </aapt:attr>
+    </target>
+</animated-vector>
diff --git a/packages/SystemUI/res/layout/quick_settings_auto_brightness.xml b/packages/SystemUI/res/layout/quick_settings_auto_brightness.xml
new file mode 100644
index 000000000000..83a221eb7a86
--- /dev/null
+++ b/packages/SystemUI/res/layout/quick_settings_auto_brightness.xml
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (C) 2022 Paranoid Android
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<com.android.systemui.settings.brightness.ToggleIconView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/toggle"
+    android:layout_width="48dp"
+    android:layout_height="48dp"
+    android:layout_marginStart="8dp"
+    android:button="@null"
+    android:foreground="@drawable/ic_qs_brightness_auto"
+    android:foregroundGravity="center"
+    android:background="@drawable/qs_tile_background"
+    android:clipToOutline="true" />
diff --git a/packages/SystemUI/res/layout/quick_settings_brightness_dialog.xml b/packages/SystemUI/res/layout/quick_settings_brightness_dialog.xml
index e95c6a79733c..df8a56fa0845 100644
--- a/packages/SystemUI/res/layout/quick_settings_brightness_dialog.xml
+++ b/packages/SystemUI/res/layout/quick_settings_brightness_dialog.xml
@@ -19,14 +19,16 @@
         android:layout_width="match_parent"
         android:layout_height="@dimen/brightness_mirror_height"
         android:layout_gravity="center"
+        android:orientation="horizontal"
         android:contentDescription="@string/accessibility_brightness"
         android:importantForAccessibility="no" >
 
         <com.android.systemui.settings.brightness.ToggleSeekBar
             android:id="@+id/slider"
-            android:layout_width="match_parent"
+            android:layout_width="0dp"
             android:layout_height="wrap_content"
             android:layout_gravity="center_vertical"
+            android:layout_weight="1"
             android:minHeight="48dp"
             android:thumb="@null"
             android:background="@null"
diff --git a/packages/SystemUI/src/com/android/systemui/settings/brightness/BrightnessController.java b/packages/SystemUI/src/com/android/systemui/settings/brightness/BrightnessController.java
index 8089d01e7343..1c9252000b65 100644
--- a/packages/SystemUI/src/com/android/systemui/settings/brightness/BrightnessController.java
+++ b/packages/SystemUI/src/com/android/systemui/settings/brightness/BrightnessController.java
@@ -61,6 +61,7 @@ public class BrightnessController implements ToggleSlider.Listener, MirroredBrig
     private static final String TAG = "CentralSurfaces.BrightnessController";
     private static final int SLIDER_ANIMATION_DURATION = 3000;
 
+    private static final int MSG_UPDATE_TOGGLE = 0;
     private static final int MSG_UPDATE_SLIDER = 1;
     private static final int MSG_ATTACH_LISTENER = 2;
     private static final int MSG_DETACH_LISTENER = 3;
@@ -216,6 +217,7 @@ public class BrightnessController implements ToggleSlider.Listener, MirroredBrig
                     Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL,
                     mUserTracker.getUserId());
             mAutomatic = automatic != Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL;
+            mHandler.obtainMessage(MSG_UPDATE_TOGGLE, automatic).sendToTarget();
         }
     };
 
@@ -254,6 +256,10 @@ public class BrightnessController implements ToggleSlider.Listener, MirroredBrig
             mExternalChange = true;
             try {
                 switch (msg.what) {
+                    case MSG_UPDATE_TOGGLE:
+                        mControl.setToggleValue(
+                                (int) msg.obj != Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL);
+                        break;
                     case MSG_UPDATE_SLIDER:
                         updateSlider(Float.intBitsToFloat(msg.arg1), msg.arg2 != 0);
                         break;
@@ -364,6 +370,15 @@ public class BrightnessController implements ToggleSlider.Listener, MirroredBrig
         }
     }
 
+    @Override
+    public void onCheckedChanged(boolean isChecked) {
+        final int mode = mAutomatic ? Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL
+                : Settings.System.SCREEN_BRIGHTNESS_MODE_AUTOMATIC;
+        Settings.System.putIntForUser(mContext.getContentResolver(),
+                Settings.System.SCREEN_BRIGHTNESS_MODE, mode,
+                mUserTracker.getUserId());
+    }
+
     public void checkRestrictionAndSetEnabled() {
         mBackgroundHandler.post(new Runnable() {
             @Override
diff --git a/packages/SystemUI/src/com/android/systemui/settings/brightness/BrightnessSliderController.java b/packages/SystemUI/src/com/android/systemui/settings/brightness/BrightnessSliderController.java
index 6c8190af27f7..e84e5a933ce0 100644
--- a/packages/SystemUI/src/com/android/systemui/settings/brightness/BrightnessSliderController.java
+++ b/packages/SystemUI/src/com/android/systemui/settings/brightness/BrightnessSliderController.java
@@ -21,6 +21,7 @@ import android.view.LayoutInflater;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.CompoundButton;
 import android.widget.SeekBar;
 
 import androidx.annotation.Nullable;
@@ -88,12 +89,16 @@ public class BrightnessSliderController extends ViewController<BrightnessSliderV
     @Override
     protected void onViewAttached() {
         mView.setOnSeekBarChangeListener(mSeekListener);
+        if (!mView.setOnCheckedChangeListener(mToggleChangeListener)) {
+            mToggleChangeListener = null;
+        }
         mView.setOnInterceptListener(mOnInterceptListener);
     }
 
     @Override
     protected void onViewDetached() {
         mView.setOnSeekBarChangeListener(null);
+        mView.setOnCheckedChangeListener(null);
         mView.setOnDispatchTouchEventListener(null);
         mView.setOnInterceptListener(null);
     }
@@ -125,6 +130,7 @@ public class BrightnessSliderController extends ViewController<BrightnessSliderV
         if (mMirror != null) {
             mMirror.setMax(mView.getMax());
             mMirror.setValue(mView.getValue());
+            mMirror.setToggleValue(mView.getToggleValue());
             mView.setOnDispatchTouchEventListener(this::mirrorTouchEvent);
         } else {
             // If there's no mirror, we may be the ones dispatching, events but we should not mirror
@@ -175,6 +181,19 @@ public class BrightnessSliderController extends ViewController<BrightnessSliderV
         return mView.getValue();
     }
 
+    @Override
+    public void setToggleValue(boolean value) {
+        mView.setToggleValue(value);
+        if (mMirror != null) {
+            mMirror.setToggleValue(value);
+        }
+    }
+
+    @Override
+    public boolean getToggleValue() {
+        return mView.getToggleValue();
+    }
+
     @Override
     public void hideView() {
         mView.setVisibility(View.GONE);
@@ -231,6 +250,13 @@ public class BrightnessSliderController extends ViewController<BrightnessSliderV
         }
     };
 
+    private CompoundButton.OnCheckedChangeListener mToggleChangeListener =
+            (buttonView, isChecked) -> {
+                if (mListener != null) {
+                    mListener.onCheckedChanged(isChecked);
+                }
+            };
+
     /**
      * Creates a {@link BrightnessSliderController} with its associated view.
      */
@@ -252,8 +278,15 @@ public class BrightnessSliderController extends ViewController<BrightnessSliderV
          */
         public BrightnessSliderController create(Context context, @Nullable ViewGroup viewRoot) {
             int layout = getLayout();
-            BrightnessSliderView root = (BrightnessSliderView) LayoutInflater.from(context)
+            boolean hasAutoBrightness = context.getResources().getBoolean(
+                    com.android.internal.R.bool.config_automatic_brightness_available);
+            LayoutInflater inflater = LayoutInflater.from(context);
+
+            BrightnessSliderView root = (BrightnessSliderView) inflater
                     .inflate(layout, viewRoot, false);
+            if (hasAutoBrightness) {
+                inflater.inflate(R.layout.quick_settings_auto_brightness, root, true);
+            }
             return new BrightnessSliderController(root, mFalsingManager);
         }
 
diff --git a/packages/SystemUI/src/com/android/systemui/settings/brightness/BrightnessSliderView.java b/packages/SystemUI/src/com/android/systemui/settings/brightness/BrightnessSliderView.java
index 38cb441a4f8c..b0f967bad876 100644
--- a/packages/SystemUI/src/com/android/systemui/settings/brightness/BrightnessSliderView.java
+++ b/packages/SystemUI/src/com/android/systemui/settings/brightness/BrightnessSliderView.java
@@ -24,7 +24,8 @@ import android.graphics.drawable.LayerDrawable;
 import android.util.AttributeSet;
 import android.view.MotionEvent;
 import android.view.View;
-import android.widget.FrameLayout;
+import android.widget.CompoundButton;
+import android.widget.LinearLayout;
 import android.widget.SeekBar.OnSeekBarChangeListener;
 
 import androidx.annotation.Keep;
@@ -39,14 +40,19 @@ import com.android.systemui.R;
  * {@code FrameLayout} used to show and manipulate a {@link ToggleSeekBar}.
  *
  */
-public class BrightnessSliderView extends FrameLayout {
+public class BrightnessSliderView extends LinearLayout {
 
     @NonNull
     private ToggleSeekBar mSlider;
+    @Nullable
+    private ToggleIconView mToggle;
+    private CompoundButton.OnCheckedChangeListener mToggleListener;
     private DispatchTouchEventListener mListener;
     private Gefingerpoken mOnInterceptListener;
     @Nullable
     private Drawable mProgressDrawable;
+    @Nullable
+    private Drawable mToggleBgDrawable;
     private float mScale = 1f;
 
     public BrightnessSliderView(Context context) {
@@ -78,6 +84,15 @@ public class BrightnessSliderView extends FrameLayout {
         }
     }
 
+    @Override
+    public void onViewAdded(View child) {
+        super.onViewAdded(child);
+        if (mToggle == null) {
+            mToggle = findViewById(R.id.toggle);
+            mToggleBgDrawable = mToggle != null ? mToggle.getBackground() : null;
+        }
+    }
+
     /**
      * Attaches a listener to relay touch events.
      * @param listener use {@code null} to remove listener
@@ -112,14 +127,33 @@ public class BrightnessSliderView extends FrameLayout {
         mSlider.setOnSeekBarChangeListener(seekListener);
     }
 
+    /**
+     * Attaches a listener to the toggle
+     * @param checkedListener use {@code null} to remove listener
+     * @return whether the listener was set
+     */
+    public boolean setOnCheckedChangeListener(CompoundButton.OnCheckedChangeListener checkedListener) {
+        if (mToggle != null) {
+            mToggleListener = checkedListener;
+            mToggle.setOnCheckedChangeListener(checkedListener);
+            return true;
+        }
+        return false;
+    }
+
     /**
      * Enforces admin rules for toggling auto-brightness and changing value of brightness
      * @param admin
      * @see ToggleSeekBar#setEnforcedAdmin
+     * @see ToggleIconView#setEnforcedAdmin
      */
     public void setEnforcedAdmin(RestrictedLockUtils.EnforcedAdmin admin) {
         mSlider.setEnabled(admin == null);
         mSlider.setEnforcedAdmin(admin);
+        if (mToggle != null) {
+            mToggle.setEnabled(admin == null);
+            mToggle.setEnforcedAdmin(admin);
+        }
     }
 
     /**
@@ -160,6 +194,29 @@ public class BrightnessSliderView extends FrameLayout {
         return mSlider.getProgress();
     }
 
+    /**
+     * Sets the current value of the toggle
+     * @param checked
+     */
+    public void setToggleValue(boolean checked) {
+        if (mToggle != null) {
+            // Avoid endless loops
+            mToggle.setOnCheckedChangeListener(null);
+            mToggle.setChecked(checked);
+            mToggle.setOnCheckedChangeListener(mToggleListener);
+        }
+    }
+
+    /**
+     * @return the current value of the toggle
+     */
+    public boolean getToggleValue() {
+        if (mToggle != null) {
+            return mToggle.isChecked();
+        }
+        return false;
+    }
+
     public void setOnInterceptListener(Gefingerpoken onInterceptListener) {
         mOnInterceptListener = onInterceptListener;
     }
@@ -199,6 +256,11 @@ public class BrightnessSliderView extends FrameLayout {
             int height = (int) (mProgressDrawable.getIntrinsicHeight() * mScale);
             int inset = (mProgressDrawable.getIntrinsicHeight() - height) / 2;
             mProgressDrawable.setBounds(r.left, inset, r.right, inset + height);
+            if (mToggleBgDrawable != null) {
+                final Rect rToggle = mToggleBgDrawable.getBounds();
+                // The slider & toggle share the same height
+                mToggleBgDrawable.setBounds(rToggle.left, inset, rToggle.right, inset + height);
+            }
         }
     }
 
diff --git a/packages/SystemUI/src/com/android/systemui/settings/brightness/ToggleIconView.kt b/packages/SystemUI/src/com/android/systemui/settings/brightness/ToggleIconView.kt
new file mode 100644
index 000000000000..6f8c42d07be4
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/settings/brightness/ToggleIconView.kt
@@ -0,0 +1,136 @@
+/*
+ * Copyright (C) 2022 Paranoid Android
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package com.android.systemui.settings.brightness
+
+import android.animation.ArgbEvaluator
+import android.animation.PropertyValuesHolder
+import android.animation.ValueAnimator
+import android.content.Context
+import android.content.res.ColorStateList
+import android.graphics.drawable.Drawable
+import android.graphics.drawable.LayerDrawable
+import android.util.AttributeSet
+import android.view.MotionEvent
+import android.widget.CheckBox
+import com.android.settingslib.RestrictedLockUtils
+import com.android.settingslib.Utils
+import com.android.systemui.Dependency
+import com.android.systemui.R
+import com.android.systemui.plugins.ActivityStarter
+import com.android.systemui.qs.tileimpl.QSIconViewImpl
+
+class ToggleIconView constructor(
+        context: Context,
+        attrs: AttributeSet?
+) : CheckBox(context, attrs) {
+
+    companion object {
+        private const val ICON_NAME = "icon"
+        private const val BACKGROUND_NAME = "background"
+    }
+
+    private val colorActive = Utils.getColorAttrDefaultColor(context, android.R.attr.colorAccent)
+    private val colorInactive = Utils.getColorAttrDefaultColor(context, R.attr.offStateColor)
+    private val colorSecondaryActive = Utils.getColorAttrDefaultColor(context, com.android.internal.R.attr.textColorPrimaryInverse)
+    private val colorSecondaryInactive = Utils.getColorAttrDefaultColor(context, android.R.attr.textColorPrimary)
+
+    private var currentBackgroundColor = colorInactive
+    private val singleAnimator: ValueAnimator = ValueAnimator().apply {
+        duration = QSIconViewImpl.QS_ANIM_LENGTH
+        addUpdateListener { animation ->
+            setColors(
+                    animation.getAnimatedValue(ICON_NAME) as Int,
+                    animation.getAnimatedValue(BACKGROUND_NAME) as Int
+            )
+        }
+    }
+
+    private var colorBackgroundDrawable: Drawable? = if (background is LayerDrawable) {
+        (background as LayerDrawable).findDrawableByLayerId(R.id.background) ?: background
+    } else {
+        background
+    }
+
+    private var mEnforcedAdmin: RestrictedLockUtils.EnforcedAdmin? = null
+
+    init {
+        setColors(getIconColor(isChecked), getBackgroundColor(isChecked))
+        jumpDrawablesToCurrentState()
+    }
+
+    private fun getIconColor(checked: Boolean): Int = if (checked) {
+        colorSecondaryActive
+    } else {
+        colorSecondaryInactive
+    }
+
+    private fun getBackgroundColor(checked: Boolean): Int = if (checked) {
+        colorActive
+    } else {
+        colorInactive
+    }
+
+    private fun setColors(iconColor: Int, backgroundColor: Int) {
+        foregroundTintList = ColorStateList.valueOf(iconColor)
+        colorBackgroundDrawable?.mutate()?.setTint(backgroundColor)
+        currentBackgroundColor = backgroundColor
+    }
+
+    override fun setChecked(checked: Boolean) {
+        if (checked != isChecked) {
+            singleAnimator.cancel()
+            val backgroundColor = getBackgroundColor(checked)
+            val iconColor = getIconColor(checked)
+            singleAnimator.setValues(
+                    PropertyValuesHolder.ofInt(
+                            ICON_NAME,
+                            foregroundTintList?.defaultColor
+                                    ?: 0,
+                            iconColor
+                    ).apply { setEvaluator(ArgbEvaluator.getInstance()) },
+                    PropertyValuesHolder.ofInt(
+                            BACKGROUND_NAME,
+                            currentBackgroundColor,
+                            backgroundColor
+                    ).apply { setEvaluator(ArgbEvaluator.getInstance()) }
+            )
+            singleAnimator.start()
+        }
+
+        super.setChecked(checked)
+    }
+
+    override fun jumpDrawablesToCurrentState() {
+        super.jumpDrawablesToCurrentState()
+        if (singleAnimator.isStarted) {
+            singleAnimator.end()
+        }
+    }
+
+    override fun onFilterTouchEventForSecurity(event: MotionEvent?): Boolean {
+        if (mEnforcedAdmin != null) {
+            val intent = RestrictedLockUtils.getShowAdminSupportDetailsIntent(
+                    mContext, mEnforcedAdmin)
+            Dependency.get(ActivityStarter::class.java).postStartActivityDismissingKeyguard(intent, 0)
+            return true
+        }
+        return super.onFilterTouchEventForSecurity(event)
+    }
+
+    fun setEnforcedAdmin(admin: RestrictedLockUtils.EnforcedAdmin?) {
+        mEnforcedAdmin = admin
+    }
+}
diff --git a/packages/SystemUI/src/com/android/systemui/settings/brightness/ToggleSlider.java b/packages/SystemUI/src/com/android/systemui/settings/brightness/ToggleSlider.java
index 648e33b1d228..dc1d83107b0d 100644
--- a/packages/SystemUI/src/com/android/systemui/settings/brightness/ToggleSlider.java
+++ b/packages/SystemUI/src/com/android/systemui/settings/brightness/ToggleSlider.java
@@ -24,6 +24,7 @@ import com.android.systemui.statusbar.policy.BrightnessMirrorController;
 public interface ToggleSlider {
     interface Listener {
         void onChanged(boolean tracking, int value, boolean stopTracking);
+        void onCheckedChanged(boolean isChecked);
     }
 
     void setEnforcedAdmin(RestrictedLockUtils.EnforcedAdmin admin);
@@ -35,6 +36,8 @@ public interface ToggleSlider {
     int getMax();
     void setValue(int value);
     int getValue();
+    void setToggleValue(boolean value);
+    boolean getToggleValue();
 
     void showView();
     void hideView();
-- 
2.34.1

